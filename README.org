* Bison-Json-Parser
  This is intend to be a library designed to provide total control
  over [[https://www.json.org/][JSON]] data structure in *C*. 

** Dependency
   You will need to have [[https://www.gnu.org/software/bison/][GNU Bison]] in order to be able to compile the
   library. There's no need to have *lex* or *flex*, because the lexer
   is implemented by hand.

** Build
   To build the library, simply use [[https://www.gnu.org/software/make/][GNU make]] utiliy by running *make*.

** Install
   After [[*Build][building]] the library, run *sudo make install*. This will copy
   all headers files in */usr/local/include/JSON* and the builded
   shared library in */usr/local/lib/libJSON.so*.

** Testing
   There's currently only one [[test][test]] that can be find under
   *./tests/src/test-main.c*. To execute the test, run *make
   tests*. Note that all tests will be run by [[http://valgrind.org/][Valgrind]].

** Documentation
   The documentation is generated by [[http://www.stack.nl/~dimitri/doxygen/][Doxygen]]. To generate the
   documentation, run *make doc*.

** Usage
#+BEGIN_SRC c
#include <JSON/json.h>   // Main json structure
#include <JSON/parser.h> // Bison parser
#include <JSON/io.h>     // io manipulaation

#define DICT_SIZE 64
#define LIST_SIZE 128

size_t hashType(const char* key);

int main(int argc, char* argv[])
{
  JSON_Type* type = NULL;

  FILE* in = fopen(argv[1], "r");

  if (in)
    JSON_parse(&type, in, &hashType, DICT_SIZE, LIST_SIZE); // 

  fclose(in);

  if (!type)
    return 1;

  // Do stuff with type here

  JSON_FreeType(type);

  fclose(out);

  return 0;
}

size_t hashType(const char* key)
{
  size_t hash = 0;

  while (*key)
    hash += (size_t)(*(key++));

  return hash;
}
#+END_SRC
